/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  Migration,
  MigrationInterface,
} from "../../../../../contracts/examples/libraries/Migrate_1_3_0_to_1_2_0.sol/Migration";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "targetSingleton",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "singleton",
        type: "address",
      },
    ],
    name: "ChangedMasterCopy",
    type: "event",
  },
  {
    inputs: [],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrationSingleton",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "safe120Singleton",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161068e38038061068e8339818101604052810190610032919061012b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009990610177565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250503073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050610240565b60008151905061012581610229565b92915050565b60006020828403121561013d57600080fd5b600061014b84828501610116565b91505092915050565b6000610161602283610197565b915061016c826101da565b604082019050919050565b6000602082019050818103600083015261019081610154565b9050919050565b600082825260208201905092915050565b60006101b3826101ba565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f496e76616c69642073696e676c65746f6e20616464726573732070726f76696460008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b610232816101a8565b811461023d57600080fd5b50565b60805160601c60a05160601c6104186102766000396000818160b20152610165015260008181608e015260d601526104186000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632e7731851461004657806389f54308146100645780638fd3ab8014610082575b600080fd5b61004e61008c565b60405161005b91906102be565b60405180910390f35b61006c6100b0565b60405161007991906102be565b60405180910390f35b61008a6100d4565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161415610163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015a90610302565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f035aff83d86937d35b32e04f0ddc6ff469290eef2f1b692d8a815c89404d474960001b306040516020016101f99291906102d9565b604051602081830303815290604052805190602001206006819055507f75e41bc35ff1bf14d81d1d2f649c0084a0f974f9289c803ec9898eeec4c8d0b860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161026491906102be565b60405180910390a1565b61027781610333565b82525050565b61028681610345565b82525050565b6102958161036f565b82525050565b60006102a8603083610322565b91506102b382610393565b604082019050919050565b60006020820190506102d3600083018461026e565b92915050565b60006040820190506102ee600083018561027d565b6102fb602083018461028c565b9392505050565b6000602082019050818103600083015261031b8161029b565b9050919050565b600082825260208201905092915050565b600061033e8261034f565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061037a82610381565b9050919050565b600061038c8261034f565b9050919050565b7f4d6967726174696f6e2073686f756c64206f6e6c792062652063616c6c65642060008201527f7669612064656c656761746563616c6c0000000000000000000000000000000060208201525056fea264697066735822122056153f905e22e80acccc3da95fa12740a3f3edc1312403549c318a38b9baae0164736f6c63430008010033";

type MigrationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MigrationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Migration__factory extends ContractFactory {
  constructor(...args: MigrationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    targetSingleton: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Migration> {
    return super.deploy(targetSingleton, overrides || {}) as Promise<Migration>;
  }
  override getDeployTransaction(
    targetSingleton: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(targetSingleton, overrides || {});
  }
  override attach(address: string): Migration {
    return super.attach(address) as Migration;
  }
  override connect(signer: Signer): Migration__factory {
    return super.connect(signer) as Migration__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MigrationInterface {
    return new utils.Interface(_abi) as MigrationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Migration {
    return new Contract(address, _abi, signerOrProvider) as Migration;
  }
}
