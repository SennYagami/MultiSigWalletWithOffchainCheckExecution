/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MultiSigWallet,
  MultiSigWalletInterface,
} from "../../contracts/MultiSigWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "checkOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "ExecuteCheckFailure",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "checkOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "ExecuteCheckSuccess",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "checkMsg",
        type: "bytes",
      },
    ],
    name: "checkValidity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "callExternalContract",
            type: "bool",
          },
          {
            internalType: "address",
            name: "checkOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "enum Enum.Operation",
            name: "operation",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "safeTxGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasPrice",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "gasToken",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "refundReceiver",
            type: "address",
          },
          {
            internalType: "bool",
            name: "transferEther",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "etherReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "etherAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "checkNonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signatures",
            type: "bytes",
          },
        ],
        internalType: "struct MultiSigWallet.CheckInfo",
        name: "checkInfo",
        type: "tuple",
      },
    ],
    name: "encodeCheckExecutionData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "callExternalContract",
            type: "bool",
          },
          {
            internalType: "address",
            name: "checkOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "enum Enum.Operation",
            name: "operation",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "safeTxGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasPrice",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "gasToken",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "refundReceiver",
            type: "address",
          },
          {
            internalType: "bool",
            name: "transferEther",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "etherReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "etherAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "checkNonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signatures",
            type: "bytes",
          },
        ],
        internalType: "struct MultiSigWallet.CheckInfo",
        name: "checkInfo",
        type: "tuple",
      },
    ],
    name: "encodeCheckExecutionData_1",
    outputs: [
      {
        internalType: "bytes",
        name: "e1",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "callExternalContract",
            type: "bool",
          },
          {
            internalType: "address",
            name: "checkOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "enum Enum.Operation",
            name: "operation",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "safeTxGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasPrice",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "gasToken",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "refundReceiver",
            type: "address",
          },
          {
            internalType: "bool",
            name: "transferEther",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "etherReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "etherAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "checkNonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signatures",
            type: "bytes",
          },
        ],
        internalType: "struct MultiSigWallet.CheckInfo",
        name: "checkInfo",
        type: "tuple",
      },
    ],
    name: "encodeCheckExecutionData_2",
    outputs: [
      {
        internalType: "bytes",
        name: "e2",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "checkMsg",
        type: "bytes",
      },
    ],
    name: "executeCheck",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620020013803806200200183398181016040528101906200003791906200008c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000106565b6000815190506200008681620000ec565b92915050565b6000602082840312156200009f57600080fd5b6000620000af8482850162000075565b91505092915050565b6000620000c582620000cc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620000f781620000b8565b81146200010357600080fd5b50565b60805160601c611ed56200012c600039600081816102ce01526105300152611ed56000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063555010491161005b578063555010491461010057806367480d5014610130578063a751e23014610160578063f698da25146101905761007d565b806303a9d831146100825780632a2a09bc146100b25780633408e470146100e2575b600080fd5b61009c6004803603810190610097919061134c565b6101ae565b6040516100a991906117c7565b60405180910390f35b6100cc60048036038101906100c7919061130b565b610212565b6040516100d99190611688565b60405180910390f35b6100ea61036a565b6040516100f791906118a9565b60405180910390f35b61011a6004803603810190610115919061134c565b610377565b60405161012791906117c7565b60405180910390f35b61014a6004803603810190610145919061130b565b6103fa565b6040516101579190611688565b60405180910390f35b61017a6004803603810190610175919061134c565b61086f565b60405161018791906117c7565b60405180910390f35b6101986108c7565b6040516101a591906116a3565b60405180910390f35b606060006101cc6101be84610377565b6101c78561086f565b610923565b805190602001209050601960f81b600160f81b6101e76108c7565b836040516020016101fb94939291906115a1565b604051602081830303815290604052915050919050565b60008060006102208461094f565b905060001515600080836101c00151815260200190815260200160002060009054906101000a900460ff1615151461028d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028490611889565b60405180910390fd5b6000610298826101ae565b905060011515600080846101c00151815260200190815260200160002060009054906101000a90505050808051906020012092507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663934f3a118483856101e001516040518463ffffffff1660e01b815260040161032e9392919061174b565b60006040518083038186803b15801561034657600080fd5b505afa15801561035a573d6000803e3d6000fd5b5050505050600192505050919050565b6000804690508091505090565b60607fe862762e9cc423ab9325aacefda6c3feadcb9e6aa390fbbd3667781066ee542960001b82600001518360200151846040015185606001518660800151805190602001208760a001518860c001518960e001516040516020016103e4999897969594939291906116be565b6040516020818303038152906040529050919050565b60008060006104088461094f565b905060001515600080836101c00151815260200190815260200160002060009054906101000a900460ff16151514610475576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046c90611889565b60405180910390fd5b6001600080836101c00151815260200190815260200160002060006101000a81548160ff021916908315150217905550806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050e906117e9565b60405180910390fd5b6000610522826101ae565b9050808051906020012092507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663934f3a118483856101e001516040518463ffffffff1660e01b81526004016105909392919061174b565b60006040518083038186803b1580156105a857600080fd5b505afa1580156105bc573d6000803e3d6000fd5b505050505060005a9050816000015115610615576106128260400151836060015184608001518560a001516000876101000151146105fe578660c0015161060d565b6109c45a61060c9190611aa2565b5b610972565b93505b816101600151156106e257600073ffffffffffffffffffffffffffffffffffffffff1682610180015173ffffffffffffffffffffffffffffffffffffffff16141561065f57600080fd5b81610180015173ffffffffffffffffffffffffffffffffffffffff166108fc836101a001519081150290604051600060405180830381858888f193505050506106dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490611869565b60405180910390fd5b600193505b6106f55a82610a1890919063ffffffff16565b90508380610708575060008260c0015114155b806107195750600082610100015114155b610758576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074f90611849565b60405180910390fd5b600080836101000151111561078a57610787828460e00151856101000151866101200151876101400151610a41565b90505b84156107fd57826040015173ffffffffffffffffffffffffffffffffffffffff167fb84985ee6912e169f5f446f739bfe323890314ccd37862ae1452cbba5fe18c128460200151856060015186608001518760a001516040516107f0949392919061163c565b60405180910390a2610866565b826040015173ffffffffffffffffffffffffffffffffffffffff167f071547af80e3d5a99bba7bbc9bfb5606512d75cfb1d4e2aee66face3f539100a8460200151856060015186608001518760a0015160405161085d949392919061163c565b60405180910390a25b50505050919050565b6060816101000151826101200151836101400151846101600151856101800151866101a00151876101c001516040516020016108b197969594939291906118c4565b6040516020818303038152906040529050919050565b60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a7946921860001b6108f561036a565b3060405160200161090893929190611790565b60405160208183030381529060405280519060200120905090565b606082826040516020016109389291906115ef565b604051602081830303815290604052905092915050565b610957610cf6565b8180602001905181019061096b919061138d565b9050919050565b60006001808111156109ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8360018111156109e6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156109ff576000808551602087018986f49050610a0f565b600080855160208701888a87f190505b95945050505050565b600082821115610a2757600080fd5b60008284610a359190611aa2565b90508091505092915050565b600080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610a7e5782610a80565b325b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610b6557610aea3a8610610ac7573a610ac9565b855b610adc888a610be190919063ffffffff16565b610c0990919063ffffffff16565b91508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050610b60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5790611809565b60405180910390fd5b610bd7565b610b8a85610b7c888a610be190919063ffffffff16565b610c0990919063ffffffff16565b9150610b97848284610c4e565b610bd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcd90611829565b60405180910390fd5b5b5095945050505050565b6000808284610bf091906119c1565b905083811015610bff57600080fd5b8091505092915050565b600080831415610c1c5760009050610c48565b60008284610c2a9190611a48565b9050828482610c399190611a17565b14610c4357600080fd5b809150505b92915050565b60008063a9059cbb8484604051602401610c69929190611613565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050602060008251602084016000896127105a03f13d60008114610cd95760208114610ce15760009350610cec565b819350610cec565b600051158215171593505b5050509392505050565b604051806102000160405280600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160006001811115610d8d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001606081525090565b6000610e30610e2b84611958565b611933565b905082815260208101848484011115610e4857600080fd5b610e53848285611baf565b509392505050565b6000610e6e610e6984611958565b611933565b905082815260208101848484011115610e8657600080fd5b610e91848285611bbe565b509392505050565b600081359050610ea881611e33565b92915050565b600081519050610ebd81611e33565b92915050565b600081359050610ed281611e4a565b92915050565b600081519050610ee781611e4a565b92915050565b600081359050610efc81611e61565b92915050565b600081519050610f1181611e61565b92915050565b600082601f830112610f2857600080fd5b8135610f38848260208601610e1d565b91505092915050565b600082601f830112610f5257600080fd5b8151610f62848260208601610e5b565b91505092915050565b600081359050610f7a81611e78565b92915050565b600081519050610f8f81611e78565b92915050565b60006102008284031215610fa857600080fd5b610fb3610200611933565b90506000610fc384828501610eed565b6000830152506020610fd784828501610e99565b6020830152506040610feb84828501610e99565b6040830152506060610fff848285016112e1565b606083015250608082013567ffffffffffffffff81111561101f57600080fd5b61102b84828501610f17565b60808301525060a061103f84828501610f6b565b60a08301525060c0611053848285016112e1565b60c08301525060e0611067848285016112e1565b60e08301525061010061107c848285016112e1565b6101008301525061012061109284828501610e99565b610120830152506101406110a884828501610ec3565b610140830152506101606110be84828501610eed565b610160830152506101806110d484828501610ec3565b610180830152506101a06110ea848285016112e1565b6101a0830152506101c0611100848285016112e1565b6101c0830152506101e082013567ffffffffffffffff81111561112257600080fd5b61112e84828501610f17565b6101e08301525092915050565b6000610200828403121561114e57600080fd5b611159610200611933565b9050600061116984828501610f02565b600083015250602061117d84828501610eae565b602083015250604061119184828501610eae565b60408301525060606111a5848285016112f6565b606083015250608082015167ffffffffffffffff8111156111c557600080fd5b6111d184828501610f41565b60808301525060a06111e584828501610f80565b60a08301525060c06111f9848285016112f6565b60c08301525060e061120d848285016112f6565b60e083015250610100611222848285016112f6565b6101008301525061012061123884828501610eae565b6101208301525061014061124e84828501610ed8565b6101408301525061016061126484828501610f02565b6101608301525061018061127a84828501610ed8565b610180830152506101a0611290848285016112f6565b6101a0830152506101c06112a6848285016112f6565b6101c0830152506101e082015167ffffffffffffffff8111156112c857600080fd5b6112d484828501610f41565b6101e08301525092915050565b6000813590506112f081611e88565b92915050565b60008151905061130581611e88565b92915050565b60006020828403121561131d57600080fd5b600082013567ffffffffffffffff81111561133757600080fd5b61134384828501610f17565b91505092915050565b60006020828403121561135e57600080fd5b600082013567ffffffffffffffff81111561137857600080fd5b61138484828501610f95565b91505092915050565b60006020828403121561139f57600080fd5b600082015167ffffffffffffffff8111156113b957600080fd5b6113c58482850161113b565b91505092915050565b6113d781611ae8565b82525050565b6113e681611ad6565b82525050565b6113f581611afa565b82525050565b61140c61140782611b06565b611c22565b82525050565b61141b81611b32565b82525050565b61143261142d82611b32565b611c2c565b82525050565b600061144382611989565b61144d8185611994565b935061145d818560208601611bbe565b61146681611cf2565b840191505092915050565b600061147c82611989565b61148681856119a5565b9350611496818560208601611bbe565b80840191505092915050565b6114ab81611b79565b82525050565b6114ba81611b9d565b82525050565b60006114cd6026836119b0565b91506114d882611d03565b604082019050919050565b60006114f06005836119b0565b91506114fb82611d52565b602082019050919050565b60006115136005836119b0565b915061151e82611d7b565b602082019050919050565b60006115366005836119b0565b915061154182611da4565b602082019050919050565b60006115596015836119b0565b915061156482611dcd565b602082019050919050565b600061157c600f836119b0565b915061158782611df6565b602082019050919050565b61159b81611b6f565b82525050565b60006115ad82876113fb565b6001820191506115bd82866113fb565b6001820191506115cd8285611421565b6020820191506115dd8284611421565b60208201915081905095945050505050565b60006115fb8285611471565b91506116078284611471565b91508190509392505050565b600060408201905061162860008301856113dd565b6116356020830184611592565b9392505050565b600060808201905061165160008301876113dd565b61165e6020830186611592565b81810360408301526116708185611438565b905061167f60608301846114b1565b95945050505050565b600060208201905061169d60008301846113ec565b92915050565b60006020820190506116b86000830184611412565b92915050565b6000610120820190506116d4600083018c611412565b6116e1602083018b6113ec565b6116ee604083018a6113dd565b6116fb60608301896113dd565b6117086080830188611592565b61171560a0830187611412565b61172260c08301866114b1565b61172f60e0830185611592565b61173d610100830184611592565b9a9950505050505050505050565b60006060820190506117606000830186611412565b81810360208301526117728185611438565b905081810360408301526117868184611438565b9050949350505050565b60006060820190506117a56000830186611412565b6117b26020830185611592565b6117bf60408301846114a2565b949350505050565b600060208201905081810360008301526117e18184611438565b905092915050565b60006020820190508181036000830152611802816114c0565b9050919050565b60006020820190508181036000830152611822816114e3565b9050919050565b6000602082019050818103600083015261184281611506565b9050919050565b6000602082019050818103600083015261186281611529565b9050919050565b600060208201905081810360008301526118828161154c565b9050919050565b600060208201905081810360008301526118a28161156f565b9050919050565b60006020820190506118be6000830184611592565b92915050565b600060e0820190506118d9600083018a611592565b6118e660208301896113dd565b6118f360408301886113ce565b61190060608301876113ec565b61190d60808301866113ce565b61191a60a0830185611592565b61192760c0830184611592565b98975050505050505050565b600061193d61194e565b90506119498282611bf1565b919050565b6000604051905090565b600067ffffffffffffffff82111561197357611972611cc3565b5b61197c82611cf2565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006119cc82611b6f565b91506119d783611b6f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a0c57611a0b611c36565b5b828201905092915050565b6000611a2282611b6f565b9150611a2d83611b6f565b925082611a3d57611a3c611c65565b5b828204905092915050565b6000611a5382611b6f565b9150611a5e83611b6f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a9757611a96611c36565b5b828202905092915050565b6000611aad82611b6f565b9150611ab883611b6f565b925082821015611acb57611aca611c36565b5b828203905092915050565b6000611ae182611b4f565b9050919050565b6000611af382611b4f565b9050919050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b6000819050611b4a82611e1f565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611b8482611b8b565b9050919050565b6000611b9682611b4f565b9050919050565b6000611ba882611b3c565b9050919050565b82818337600083830152505050565b60005b83811015611bdc578082015181840152602081019050611bc1565b83811115611beb576000848401525b50505050565b611bfa82611cf2565b810181811067ffffffffffffffff82111715611c1957611c18611cc3565b5b80604052505050565b6000819050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f636865636b206f776e657220616e64206d73672073656e64657220646f6e277460008201527f206d617463680000000000000000000000000000000000000000000000000000602082015250565b7f4753303131000000000000000000000000000000000000000000000000000000600082015250565b7f4753303132000000000000000000000000000000000000000000000000000000600082015250565b7f4753303133000000000000000000000000000000000000000000000000000000600082015250565b7f7472616e73666572206574686572206661696c65640000000000000000000000600082015250565b7f7573656420636865636b4e6f6e63650000000000000000000000000000000000600082015250565b60028110611e3057611e2f611c94565b5b50565b611e3c81611ad6565b8114611e4757600080fd5b50565b611e5381611ae8565b8114611e5e57600080fd5b50565b611e6a81611afa565b8114611e7557600080fd5b50565b60028110611e8557600080fd5b50565b611e9181611b6f565b8114611e9c57600080fd5b5056fea26469706673582212207e920a9ab22b815f1d18535e0ea6399629ecba130bdb5a8da8c73474ae79074564736f6c63430008010033";

type MultiSigWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiSigWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiSigWallet__factory extends ContractFactory {
  constructor(...args: MultiSigWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    a: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiSigWallet> {
    return super.deploy(a, overrides || {}) as Promise<MultiSigWallet>;
  }
  override getDeployTransaction(
    a: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(a, overrides || {});
  }
  override attach(address: string): MultiSigWallet {
    return super.attach(address) as MultiSigWallet;
  }
  override connect(signer: Signer): MultiSigWallet__factory {
    return super.connect(signer) as MultiSigWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSigWalletInterface {
    return new utils.Interface(_abi) as MultiSigWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiSigWallet {
    return new Contract(address, _abi, signerOrProvider) as MultiSigWallet;
  }
}
